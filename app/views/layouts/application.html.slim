doctype html
html lang="en"
  head
    = display_meta_tags
    meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1"
    = stylesheet_pack_tag 'css'
    = stylesheet_link_tag 'https://fonts.googleapis.com/css?family=Lato', media: 'none', onload: "if(media!='all')media='all'"
    = javascript_pack_tag 'js', async: true
    = csrf_meta_tags
    script src="https://js.chargebee.com/v2/chargebee.js" data-cb-site="goodlogik"

    = render 'partials/microdata'

    javascript:

      (function(){

        // Create a queue, but don't obliterate an existing one!
        var analytics = window.analytics = window.analytics || [];

        // If the real analytics.js is already on the page return.
        if (analytics.initialize) return;

        // If the snippet was invoked already show an error.
        if (analytics.invoked) {
          if (window.console && console.error) {
            console.error('Segment snippet included twice.');
          }
          return;
        }

        // Invoked flag, to make sure the snippet
        // is never invoked twice.
        analytics.invoked = true;

        // A list of the methods in Analytics.js to stub.
        analytics.methods = [
          'trackSubmit',
          'trackClick',
          'trackLink',
          'trackForm',
          'pageview',
          'identify',
          'reset',
          'group',
          'track',
          'ready',
          'alias',
          'debug',
          'page',
          'once',
          'off',
          'on'
        ];

        // Define a factory to create stubs. These are placeholders
        // for methods in Analytics.js so that you never have to wait
        // for it to load to actually record data. The `method` is
        // stored as the first argument, so we can replay the data.
        analytics.factory = function(method){
          return function(){
            var args = Array.prototype.slice.call(arguments);
            args.unshift(method);
            analytics.push(args);
            return analytics;
          };
        };

        // For each of our methods, generate a queueing stub.
        for (var i = 0; i < analytics.methods.length; i++) {
          var key = analytics.methods[i];
          analytics[key] = analytics.factory(key);
        }

        // Define a method to load Analytics.js from our CDN,
        // and that will be sure to only ever load it once.
        analytics.load = function(key, options){
          // Create an async script element based on your key.
          var script = document.createElement('script');
          script.type = 'text/javascript';
          script.async = true;
          script.src = 'https://cdn.segment.com/analytics.js/v1/'
            + key + '/analytics.min.js';

          // Insert our script next to the first script element.
          var first = document.getElementsByTagName('script')[0];
          first.parentNode.insertBefore(script, first);
          analytics._loadOptions = options;
        };

        // Add a version to keep track of what's in the wild.
        analytics.SNIPPET_VERSION = '4.1.0';

        // Load Analytics.js with your key, which will automatically
        // load the tools you've enabled for your account. Boosh!
        analytics.load('#{ENV['SEGMENT']}');

        // Make the first page call to load the integrations. If
        // you'd like to manually name or tag the page, edit or
        // move this call however you'd like.
        analytics.page();
      })();


  body

    = sidebar 'ui vertical inverted menu right'

      = link_to "Home", root_path, class: "item #{is_active?(root_path)}"
      = link_to "Brands", brands_path, class: "item #{is_active?(brands_path)}"
      = link_to 'Coin', coin_path, class: "item #{is_active?(coin_path)}"
      = link_to 'Careers', careers_path, class: "item #{is_active?(careers_path)}"
      = link_to 'About', about_path, class: "item #{is_active?(about_path)}"
      = item
        .ui.button.fluid.red data-cb-type="portal" href="javascript:void(0)"
          = icon 'lock'
          | Account

    .pusher
      = segment 'vertical hero segment clearing '
        = menu ui: :on, class: 'secondary inverted large'
          = item url: root_path
            = image_tag 'logo.png', class: 'ui image small logo', alt: 'goodlogik logo'
          = menu class: 'right', only: :mobile
            = item 'hamburger'
              = icon 'large sidebar'
          = menu class: 'right', only: :desktop
            = link_to 'BRANDS', brands_path, class: "item #{is_active?(brands_path)}"
            = link_to 'COIN', coin_path, class: "item #{is_active?(coin_path)}"
            = link_to 'CAREERS', careers_path, class: "item #{is_active?(careers_path)}"
            = link_to 'ABOUT', about_path, class: "item #{is_active?(about_path)}"
            = item
              a.ui.button.purple href="javascript:void(0)" data-cb-type="portal"
                = icon 'lock'
                | ACCOUNT

        = yield :hero
      =yield
      = fragment 'footer'
        = grid
          = row
            = column size: 8, class: 'left'
              = list 'horizontal divided'
                = item
                  | &copy; 2020
                = item
                  |GOODLOGIK
            = column size: 8, class: 'right aligned'
              = list 'horizontal divided'
                = link_to "Privacy <span class='mobile none'>Policy</span>".html_safe, privacy_path, class: 'item', target: "_blank"
                = link_to "TOS", tos_path, class: 'item', target: "_blank"
      = render 'partials/requester_modal'
      = render 'partials/job_modal'
      = notice
      = alert
